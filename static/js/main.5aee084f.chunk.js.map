{"version":3,"sources":["components/stream/OvVideo.js","components/stream/StreamComponent.js","components/dialog-extension/DialogExtension.js","components/chat/ChatComponent.js","layout/openvidu-layout.js","models/user-model.js","components/toolbar/ToolbarComponent.js","components/VideoRoomComponent.js","registerServiceWorker.js","index.js"],"names":["OvVideoComponent","props","videoRef","React","createRef","this","user","streamManager","console","log","getStreamManager","addVideoElement","current","session","on","event","undefined","JSON","parse","data","isScreenShareActive","autoPlay","id","stream","streamId","ref","muted","mutedSound","Component","StreamComponent","state","nickname","getNickname","showForm","isFormValid","handleChange","bind","handlePressKey","toggleNicknameForm","toggleSound","setState","target","value","preventDefault","isLocal","key","length","handleNickname","className","color","onClick","htmlFor","onChange","onKeyPress","required","isVideoActive","isAudioActive","DialogExtensionComponent","openviduExtensionUrl","isInstalled","goToChromePage","onNoClick","refreshBrowser","cancelClicked","window","open","location","reload","showDialog","size","ChatComponent","messageList","message","chatScroll","close","sendMessage","push","connectionId","from","document","setTimeout","userImg","getElementById","video","getContext","drawImage","messageReceived","scrollToBottom","replace","signal","stringify","type","scrollTop","scrollHeight","err","styleChat","display","chatDisplay","style","sessionId","map","i","getConnectionId","width","height","placeholder","title","OpenViduLayout","elem","sub","querySelector","oldWidth","x","y","animate","targetPosition","left","top","fixAspectRatio","$","stop","duration","easing","complete","call","css","videoHeight","videoWidth","prop","cssStr","parseInt","Math","random","toFixed","heightStr","widthStr","minR","maxR","count","WIDTH","HEIGHT","targetHeight","maxArea","targetCols","targetRows","targetWidth","tWidth","tHeight","tRatio","colsAux","rowsAux","ceil","floor","area","ratio","children","offsetLeft","offsetTop","fixedRatio","minRatio","maxRatio","dimensions","getVideoRatio","getBestDimensions","row","rows","totalRowHeight","remainingShortRows","remainingHeightDiff","extraHeight","j","position","actualWidth","getCSSNumber","actualHeight","positionElement","element","layoutContainer","cheapUUID","bigWidth","bigHeight","getHeight","getWidth","availableRatio","bigOffsetTop","bigOffsetLeft","bigOnes","Array","prototype","filter","querySelectorAll","opts","bigClass","filterDisplayNone","smallOnes","bigPercentage","bigFirst","arrange","bigFixedRatio","bigMinRatio","bigMaxRatio","container","options","UserModel","audioActive","videoActive","screenShareActive","conecctionId","ToolbarComponent","fullscreen","camStatusChanged","micStatusChanged","screenShare","stopScreenShare","toggleFullscreen","leaveSession","toggleChat","mySessionId","localUser","alt","src","showNotification","VideoRoomComponent","OPENVIDU_SERVER_URL","OPENVIDU_SERVER_SECRET","hasBeenUpdated","layout","sessionName","userName","myUserName","subscribers","joinSession","onbeforeunload","updateLayout","nicknameChanged","closeDialogExtension","checkNotification","checkSize","initLayoutContainer","addEventListener","removeEventListener","OV","OpenVidu","initSession","subscribeToStreamCreated","connectToSession","token","connect","getToken","then","catch","error","messgae","code","status","alert","clientData","connectWebCam","publisher","initPublisher","audioSource","videoSource","publishAudio","publishVideo","resolution","frameRate","insertMode","capabilities","publish","setNickname","setConnectionId","connection","setScreenShareActive","setStreamManager","subscribeToUserChanged","subscribeToStreamDestroyed","sendSignalUserChanged","e","videos","parentElement","classList","remove","mySession","disconnect","setVideoActive","setAudioActive","remoteUsers","userStream","index","indexOf","splice","subscriber","subscribe","checkSomeoneShareScreen","newUser","setType","split","deleteSubscriber","forEach","signalOptions","fs","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","navigator","userAgent","mirror","name","showExtensionDialog","once","unpublish","openviduLayoutOptions","some","setLayoutOptions","property","offsetWidth","createSession","createToken","Promise","resolve","reject","customSessionId","axios","post","headers","Authorization","btoa","response","Object","assign","warn","confirm","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","URL","process","origin","fetch","get","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5aee084f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './StreamComponent.css';\r\n\r\nexport default class OvVideoComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.videoRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props && this.props.user.streamManager && !!this.videoRef) {\r\n            console.log('PROPS: ', this.props);\r\n            this.props.user.getStreamManager().addVideoElement(this.videoRef.current);\r\n        }\r\n\r\n        if (this.props && this.props.user.streamManager.session && this.props.user && !!this.videoRef) {\r\n            this.props.user.streamManager.session.on('signal:userChanged', (event) => {\r\n                const data = JSON.parse(event.data);\r\n                if (data.isScreenShareActive !== undefined) {\r\n                    this.props.user.getStreamManager().addVideoElement(this.videoRef.current);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(props) {\r\n        if (props && !!this.videoRef) {\r\n            this.props.user.getStreamManager().addVideoElement(this.videoRef.current);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <video\r\n                autoPlay={true}\r\n                id={'video-' + this.props.user.getStreamManager().stream.streamId}\r\n                ref={this.videoRef}\r\n                muted={this.props.mutedSound}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './StreamComponent.css';\r\nimport OvVideoComponent from './OvVideo';\r\n\r\nimport MicOff from '@material-ui/icons/MicOff';\r\nimport VideocamOff from '@material-ui/icons/VideocamOff';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\nimport VolumeOff from '@material-ui/icons/VolumeOff';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HighlightOff from '@material-ui/icons/HighlightOff';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nexport default class StreamComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { nickname: this.props.user.getNickname(), showForm: false, mutedSound: false, isFormValid: true };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlePressKey = this.handlePressKey.bind(this);\r\n        this.toggleNicknameForm = this.toggleNicknameForm.bind(this);\r\n        this.toggleSound = this.toggleSound.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ nickname: event.target.value });\r\n        event.preventDefault();\r\n    }\r\n\r\n    toggleNicknameForm() {\r\n        if (this.props.user.isLocal()) {\r\n            this.setState({ showForm: !this.state.showForm });\r\n        }\r\n    }\r\n\r\n    toggleSound() {\r\n        this.setState({ mutedSound: !this.state.mutedSound });\r\n    }\r\n\r\n    handlePressKey(event) {\r\n        if (event.key === 'Enter') {\r\n            console.log(this.state.nickname);\r\n            if (this.state.nickname.length >= 3 && this.state.nickname.length <= 20) {\r\n                this.props.handleNickname(this.state.nickname);\r\n                this.toggleNicknameForm();\r\n                this.setState({ isFormValid: true });\r\n            } else {\r\n                this.setState({ isFormValid: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"OT_widget-container\">\r\n                <div className=\"pointer nickname\">\r\n                    {this.state.showForm ? (\r\n                        <FormControl id=\"nicknameForm\">\r\n                            <IconButton color=\"inherit\" id=\"closeButton\" onClick={this.toggleNicknameForm}>\r\n                                <HighlightOff />\r\n                            </IconButton>\r\n                            <InputLabel htmlFor=\"name-simple\" id=\"label\">\r\n                                Nickname\r\n                            </InputLabel>\r\n                            <Input\r\n                                color=\"inherit\"\r\n                                id=\"input\"\r\n                                value={this.state.nickname}\r\n                                onChange={this.handleChange}\r\n                                onKeyPress={this.handlePressKey}\r\n                                required\r\n                            />\r\n                            {!this.state.isFormValid && this.state.nickname.length <= 3 && (\r\n                                <FormHelperText id=\"name-error-text\">Nickname is too short!</FormHelperText>\r\n                            )}\r\n                            {!this.state.isFormValid && this.state.nickname.length >= 20 && (\r\n                                <FormHelperText id=\"name-error-text\">Nickname is too long!</FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                    ) : (\r\n                        <div onClick={this.toggleNicknameForm}>\r\n                            <span id=\"nickname\">{this.props.user.getNickname()}</span>\r\n                            {this.props.user.isLocal() && <span> (edit)</span>}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {this.props.user !== undefined && this.props.user.getStreamManager() !== undefined ? (\r\n                    <div className=\"streamComponent\">\r\n                        <OvVideoComponent user={this.props.user} mutedSound={this.state.mutedSound} />\r\n                        <div id=\"statusIcons\">\r\n                            {!this.props.user.isVideoActive() ? (\r\n                                <div id=\"camIcon\">\r\n                                    <VideocamOff id=\"statusCam\" />\r\n                                </div>\r\n                            ) : null}\r\n\r\n                            {!this.props.user.isAudioActive() ? (\r\n                                <div id=\"micIcon\">\r\n                                    <MicOff id=\"statusMic\" />\r\n                                </div>\r\n                            ) : null}\r\n                        </div>\r\n                        <div>\r\n                            {!this.props.user.isLocal() && (\r\n                                <IconButton id=\"volumeButton\" onClick={this.toggleSound}>\r\n                                    {this.state.mutedSound ? <VolumeOff color=\"secondary\" /> : <VolumeUp />}\r\n                                </IconButton>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport './DialogExtension.css';\r\n\r\nexport default class DialogExtensionComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.openviduExtensionUrl =\r\n            'https://chrome.google.com/webstore/detail/openvidu-screensharing/lfcgfepafnobdloecchnfaclibenjold';\r\n        //isInstalled: boolean;\r\n\r\n        this.state = {\r\n            isInstalled: false,\r\n        };\r\n        this.goToChromePage = this.goToChromePage.bind(this);\r\n        this.onNoClick = this.onNoClick.bind(this);\r\n        this.refreshBrowser = this.refreshBrowser.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(props) {}\r\n\r\n    componentDidMount() {}\r\n\r\n    onNoClick() {\r\n        // this.cancel.emit();\r\n        this.props.cancelClicked();\r\n    }\r\n\r\n    goToChromePage() {\r\n        window.open(this.openviduExtensionUrl);\r\n        this.setState({ isInstalled: true });\r\n    }\r\n\r\n    refreshBrowser() {\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props && this.props.showDialog ? (\r\n                    <div id=\"dialogExtension\">\r\n                        <Card id=\"card\">\r\n                            <CardContent>\r\n                                <Typography color=\"textSecondary\">Hello</Typography>\r\n                                <Typography color=\"textSecondary\">\r\n                                    You need install this chrome extension and refresh the browser for can share your screen.\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button size=\"small\" onClick={this.onNoClick}>\r\n                                    Cancel\r\n                                </Button>\r\n\r\n                                <Button size=\"small\" onClick={this.goToChromePage}>\r\n                                    Install\r\n                                </Button>\r\n                                {this.state.isInstalled ? (\r\n                                    <Button size=\"small\" onClick={this.refreshBrowser}>\r\n                                        Refresh\r\n                                    </Button>\r\n                                ) : null}\r\n                            </CardActions>\r\n                        </Card>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HighlightOff from '@material-ui/icons/HighlightOff';\r\nimport Send from '@material-ui/icons/Send';\r\n\r\nimport './ChatComponent.css';\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nexport default class ChatComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messageList: [],\r\n            message: '',\r\n        };\r\n        this.chatScroll = React.createRef();\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlePressKey = this.handlePressKey.bind(this);\r\n        this.close = this.close.bind(this);\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.user.getStreamManager().stream.session.on('signal:chat', (event) => {\r\n            const data = JSON.parse(event.data);\r\n            let messageList = this.state.messageList;\r\n            messageList.push({ connectionId: event.from.connectionId, nickname: data.nickname, message: data.message });\r\n            const document = window.document;\r\n            setTimeout(() => {\r\n                const userImg = document.getElementById('userImg-' + (this.state.messageList.length - 1));\r\n                const video = document.getElementById('video-' + data.streamId);\r\n                const avatar = userImg.getContext('2d');\r\n                avatar.drawImage(video, 200, 120, 285, 285, 0, 0, 60, 60);\r\n                this.props.messageReceived();\r\n            }, 50);\r\n            this.setState({ messageList: messageList });\r\n            this.scrollToBottom();\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ message: event.target.value });\r\n    }\r\n\r\n    handlePressKey(event) {\r\n        if (event.key === 'Enter') {\r\n            this.sendMessage();\r\n        }\r\n    }\r\n\r\n    sendMessage() {\r\n        console.log(this.state.message);\r\n        if (this.props.user && this.state.message) {\r\n            let message = this.state.message.replace(/ +(?= )/g, '');\r\n            if (message !== '' && message !== ' ') {\r\n                const data = { message: message, nickname: this.props.user.getNickname(), streamId: this.props.user.getStreamManager().stream.streamId };\r\n                this.props.user.getStreamManager().stream.session.signal({\r\n                    data: JSON.stringify(data),\r\n                    type: 'chat',\r\n                });\r\n            }\r\n        }\r\n        this.setState({ message: '' });\r\n    }\r\n\r\n    scrollToBottom() {\r\n        setTimeout(() => {\r\n            try {\r\n                this.chatScroll.current.scrollTop = this.chatScroll.current.scrollHeight;\r\n            } catch (err) {}\r\n        }, 20);\r\n    }\r\n\r\n    close() {\r\n        this.props.close(undefined);\r\n    }\r\n\r\n    render() {\r\n        const styleChat = { display: this.props.chatDisplay };\r\n        return (\r\n            <div id=\"chatContainer\">\r\n                <div id=\"chatComponent\" style={styleChat}>\r\n                    <div id=\"chatToolbar\">\r\n                        <span>{this.props.user.getStreamManager().stream.session.sessionId} - CHAT</span>\r\n                        <IconButton id=\"closeButton\" onClick={this.close}>\r\n                            <HighlightOff color=\"secondary\" />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className=\"message-wrap\" ref={this.chatScroll}>\r\n                        {this.state.messageList.map((data, i) => (\r\n                            <div\r\n                                key={i}\r\n                                id=\"remoteUsers\"\r\n                                className={\r\n                                    'message' + (data.connectionId !== this.props.user.getConnectionId() ? ' left' : ' right')\r\n                                }\r\n                            >\r\n                                <canvas id={'userImg-' + i} width=\"60\" height=\"60\" className=\"user-img\" />\r\n                                <div className=\"msg-detail\">\r\n                                    <div className=\"msg-info\">\r\n                                        <p> {data.nickname}</p>\r\n                                    </div>\r\n                                    <div className=\"msg-content\">\r\n                                        <span className=\"triangle\" />\r\n                                        <p className=\"text\">{data.message}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div id=\"messageInput\">\r\n                        <input\r\n                            placeholder=\"Send a messge\"\r\n                            id=\"chatInput\"\r\n                            value={this.state.message}\r\n                            onChange={this.handleChange}\r\n                            onKeyPress={this.handlePressKey}\r\n                        />\r\n                        <Tooltip title=\"Send message\">\r\n                            <Fab size=\"small\" id=\"sendButton\" onClick={this.sendMessage}>\r\n                                <Send />\r\n                            </Fab>\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import $ from 'jquery';\r\n\r\nclass OpenViduLayout {\r\n  layoutContainer;\r\n  opts ;\r\n\r\n  fixAspectRatio(elem, width) {\r\n    const sub = elem.querySelector('.OT_root');\r\n    if (sub) {\r\n      // If this is the parent of a subscriber or publisher then we need\r\n      // to force the mutation observer on the publisher or subscriber to\r\n      // trigger to get it to fix it's layout\r\n      const oldWidth = sub.style.width;\r\n      sub.style.width = width + 'px';\r\n      // sub.style.height = height + 'px';\r\n      sub.style.width = oldWidth || '';\r\n    }\r\n  }\r\n\r\n positionElement(elem, x, y, width, height, animate) {\r\n    const targetPosition = {\r\n      left: x + 'px',\r\n      top: y + 'px',\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n    };\r\n\r\n    this.fixAspectRatio(elem, width);\r\n\r\n    if (animate && $) {\r\n      $(elem).stop();\r\n      $(elem).animate(targetPosition, animate.duration || 200, animate.easing || 'swing', () => {\r\n        this.fixAspectRatio(elem, width);\r\n        if (animate.complete) {\r\n          animate.complete.call(this);\r\n        }\r\n      });\r\n    } else {\r\n      $(elem).css(targetPosition);\r\n    }\r\n    this.fixAspectRatio(elem, width);\r\n  }\r\n\r\n  getVideoRatio(elem) {\r\n    if (!elem) {\r\n      return 3 / 4;\r\n    }\r\n    const video = elem.querySelector('video');\r\n    if (video && video.videoHeight && video.videoWidth) {\r\n      return video.videoHeight / video.videoWidth;\r\n    } else if (elem.videoHeight && elem.videoWidth) {\r\n      return elem.videoHeight / elem.videoWidth;\r\n    }\r\n    return 3 / 4;\r\n  }\r\n\r\n   getCSSNumber(elem, prop) {\r\n    const cssStr = $(elem).css(prop);\r\n    return cssStr ? parseInt(cssStr, 10) : 0;\r\n  }\r\n\r\n  // Really cheap UUID function\r\n   cheapUUID() {\r\n    return (Math.random() * 100000000).toFixed(0);\r\n  }\r\n\r\n   getHeight(elem) {\r\n    const heightStr = $(elem).css('height');\r\n    return heightStr ? parseInt(heightStr, 10) : 0;\r\n  }\r\n\r\n   getWidth(elem) {\r\n    const widthStr = $(elem).css('width');\r\n    return widthStr ? parseInt(widthStr, 10) : 0;\r\n  }\r\n\r\n   getBestDimensions(minR , maxR , count , WIDTH, HEIGHT, targetHeight) {\r\n    let maxArea, targetCols, targetRows, targetWidth, tWidth, tHeight, tRatio;\r\n\r\n    // Iterate through every possible combination of rows and columns\r\n    // and see which one has the least amount of whitespace\r\n    for (let i = 1; i <= count; i++) {\r\n      const colsAux = i;\r\n      const rowsAux = Math.ceil(count / colsAux);\r\n\r\n      // Try taking up the whole height and width\r\n      tHeight = Math.floor(HEIGHT / rowsAux);\r\n      tWidth = Math.floor(WIDTH / colsAux);\r\n\r\n      tRatio = tHeight / tWidth;\r\n      if (tRatio > maxR) {\r\n        // We went over decrease the height\r\n        tRatio = maxR;\r\n        tHeight = tWidth * tRatio;\r\n      } else if (tRatio < minR) {\r\n        // We went under decrease the width\r\n        tRatio = minR;\r\n        tWidth = tHeight / tRatio;\r\n      }\r\n\r\n      const area = tWidth * tHeight * count;\r\n\r\n      // If this width and height takes up the most space then we're going with that\r\n      if (maxArea === undefined || area > maxArea) {\r\n        maxArea = area;\r\n        targetHeight = tHeight;\r\n        targetWidth = tWidth;\r\n        targetCols = colsAux;\r\n        targetRows = rowsAux;\r\n      }\r\n    }\r\n    return {\r\n      maxArea: maxArea,\r\n      targetCols: targetCols,\r\n      targetRows: targetRows,\r\n      targetHeight: targetHeight,\r\n      targetWidth: targetWidth,\r\n      ratio: targetHeight / targetWidth,\r\n    };\r\n  }\r\n\r\n   arrange(\r\n    children,\r\n    WIDTH,\r\n    HEIGHT,\r\n    offsetLeft,\r\n    offsetTop,\r\n    fixedRatio,\r\n    minRatio,\r\n    maxRatio,\r\n    animate,\r\n  ) {\r\n    let targetHeight;\r\n\r\n    const count = children.length;\r\n    let dimensions;\r\n\r\n    if (!fixedRatio) {\r\n      dimensions = this.getBestDimensions(minRatio, maxRatio, count, WIDTH, HEIGHT, targetHeight);\r\n    } else {\r\n      // Use the ratio of the first video element we find to approximate\r\n      const ratio = this.getVideoRatio(children.length > 0 ? children[0] : null);\r\n      dimensions = this.getBestDimensions(ratio, ratio, count, WIDTH, HEIGHT, targetHeight);\r\n    }\r\n\r\n    // Loop through each stream in the container and place it inside\r\n    let x = 0,\r\n      y = 0;\r\n    const rows = [];\r\n    let row;\r\n    // Iterate through the children and create an array with a new item for each row\r\n    // and calculate the width of each row so that we know if we go over the size and need\r\n    // to adjust\r\n    for (let i = 0; i < children.length; i++) {\r\n      if (i % dimensions.targetCols === 0) {\r\n        // This is a new row\r\n        row = {\r\n          children: [],\r\n          width: 0,\r\n          height: 0,\r\n        };\r\n        rows.push(row);\r\n      }\r\n      const elem = children[i];\r\n      row.children.push(elem);\r\n      let targetWidth = dimensions.targetWidth;\r\n      targetHeight = dimensions.targetHeight;\r\n      // If we're using a fixedRatio then we need to set the correct ratio for this element\r\n      if (fixedRatio) {\r\n        targetWidth = targetHeight / this.getVideoRatio(elem);\r\n      }\r\n      row.width += targetWidth;\r\n      row.height = targetHeight;\r\n    }\r\n    // Calculate total row height adjusting if we go too wide\r\n    let totalRowHeight = 0;\r\n    let remainingShortRows = 0;\r\n    for (let i = 0; i < rows.length; i++) {\r\n      row = rows[i];\r\n      if (row.width > WIDTH) {\r\n        // Went over on the width, need to adjust the height proportionally\r\n        row.height = Math.floor(row.height * (WIDTH / row.width));\r\n        row.width = WIDTH;\r\n      } else if (row.width < WIDTH) {\r\n        remainingShortRows += 1;\r\n      }\r\n      totalRowHeight += row.height;\r\n    }\r\n    if (totalRowHeight < HEIGHT && remainingShortRows > 0) {\r\n      // We can grow some of the rows, we're not taking up the whole height\r\n      let remainingHeightDiff = HEIGHT - totalRowHeight;\r\n      totalRowHeight = 0;\r\n      for (let i = 0; i < rows.length; i++) {\r\n        row = rows[i];\r\n        if (row.width < WIDTH) {\r\n          // Evenly distribute the extra height between the short rows\r\n          let extraHeight = remainingHeightDiff / remainingShortRows;\r\n          if (extraHeight / row.height > (WIDTH - row.width) / row.width) {\r\n            // We can't go that big or we'll go too wide\r\n            extraHeight = Math.floor((WIDTH - row.width) / row.width * row.height);\r\n          }\r\n          row.width += Math.floor(extraHeight / row.height * row.width);\r\n          row.height += extraHeight;\r\n          remainingHeightDiff -= extraHeight;\r\n          remainingShortRows -= 1;\r\n        }\r\n        totalRowHeight += row.height;\r\n      }\r\n    }\r\n    // vertical centering\r\n    y = (HEIGHT - totalRowHeight) / 2;\r\n    // Iterate through each row and place each child\r\n    for (let i = 0; i < rows.length; i++) {\r\n      row = rows[i];\r\n      // center the row\r\n      const rowMarginLeft = (WIDTH - row.width) / 2;\r\n      x = rowMarginLeft;\r\n      for (let j = 0; j < row.children.length; j++) {\r\n        const elem = row.children[j];\r\n\r\n        let targetWidth = dimensions.targetWidth;\r\n        targetHeight = row.height;\r\n        // If we're using a fixedRatio then we need to set the correct ratio for this element\r\n        if (fixedRatio) {\r\n          targetWidth = Math.floor(targetHeight / this.getVideoRatio(elem));\r\n        }\r\n        elem.style.position = 'absolute';\r\n        // $(elem).css('position', 'absolute');\r\n        const actualWidth =\r\n          targetWidth -\r\n          this.getCSSNumber(elem, 'paddingLeft') -\r\n          this.getCSSNumber(elem, 'paddingRight') -\r\n          this.getCSSNumber(elem, 'marginLeft') -\r\n          this.getCSSNumber(elem, 'marginRight') -\r\n          this.getCSSNumber(elem, 'borderLeft') -\r\n          this.getCSSNumber(elem, 'borderRight');\r\n\r\n        const actualHeight =\r\n          targetHeight -\r\n          this.getCSSNumber(elem, 'paddingTop') -\r\n          this.getCSSNumber(elem, 'paddingBottom') -\r\n          this.getCSSNumber(elem, 'marginTop') -\r\n          this.getCSSNumber(elem, 'marginBottom') -\r\n          this.getCSSNumber(elem, 'borderTop') -\r\n          this.getCSSNumber(elem, 'borderBottom');\r\n\r\n        this.positionElement(elem, x + offsetLeft, y + offsetTop, actualWidth, actualHeight, animate);\r\n        x += targetWidth;\r\n      }\r\n      y += targetHeight;\r\n    }\r\n  }\r\n\r\n filterDisplayNone(element) {\r\n    return element.style.display !== 'none';\r\n  }\r\n\r\n  updateLayout() {\r\n    if (this.layoutContainer.style.display === 'none') {\r\n      return;\r\n    }\r\n    let id = this.layoutContainer.id;\r\n    if (!id) {\r\n      id = 'OT_' + this.cheapUUID();\r\n      this.layoutContainer.id = id;\r\n    }\r\n\r\n    const HEIGHT =\r\n      this.getHeight(this.layoutContainer) -\r\n      this.getCSSNumber(this.layoutContainer, 'borderTop') -\r\n      this.getCSSNumber(this.layoutContainer, 'borderBottom');\r\n    const WIDTH =\r\n      this.getWidth(this.layoutContainer) -\r\n      this.getCSSNumber(this.layoutContainer, 'borderLeft') -\r\n      this.getCSSNumber(this.layoutContainer, 'borderRight');\r\n\r\n    const availableRatio = HEIGHT / WIDTH;\r\n\r\n    let offsetLeft = 0;\r\n    let offsetTop = 0;\r\n    let bigOffsetTop = 0;\r\n    let bigOffsetLeft = 0;\r\n\r\n    const bigOnes = Array.prototype.filter.call(\r\n      this.layoutContainer.querySelectorAll('#' + id + '>.' + this.opts.bigClass),\r\n      this.filterDisplayNone,\r\n    );\r\n    const smallOnes = Array.prototype.filter.call(\r\n      this.layoutContainer.querySelectorAll('#' + id + '>*:not(.' + this.opts.bigClass + ')'),\r\n      this.filterDisplayNone,\r\n    );\r\n\r\n    if (bigOnes.length > 0 && smallOnes.length > 0) {\r\n      let bigWidth, bigHeight;\r\n\r\n      if (availableRatio > this.getVideoRatio(bigOnes[0])) {\r\n        // We are tall, going to take up the whole width and arrange small\r\n        // guys at the bottom\r\n        bigWidth = WIDTH;\r\n        bigHeight = Math.floor(HEIGHT * this.opts.bigPercentage);\r\n        offsetTop = bigHeight;\r\n        bigOffsetTop = HEIGHT - offsetTop;\r\n      } else {\r\n        // We are wide, going to take up the whole height and arrange the small\r\n        // guys on the right\r\n        bigHeight = HEIGHT;\r\n        bigWidth = Math.floor(WIDTH * this.opts.bigPercentage);\r\n        offsetLeft = bigWidth;\r\n        bigOffsetLeft = WIDTH - offsetLeft;\r\n      }\r\n      if (this.opts.bigFirst) {\r\n        this.arrange(\r\n          bigOnes,\r\n          bigWidth,\r\n          bigHeight,\r\n          0,\r\n          0,\r\n          this.opts.bigFixedRatio,\r\n          this.opts.bigMinRatio,\r\n          this.opts.bigMaxRatio,\r\n          this.opts.animate,\r\n        );\r\n        this.arrange(\r\n          smallOnes,\r\n          WIDTH - offsetLeft,\r\n          HEIGHT - offsetTop,\r\n          offsetLeft,\r\n          offsetTop,\r\n          this.opts.fixedRatio,\r\n          this.opts.minRatio,\r\n          this.opts.maxRatio,\r\n          this.opts.animate,\r\n        );\r\n      } else {\r\n        this.arrange(\r\n          smallOnes,\r\n          WIDTH - offsetLeft,\r\n          HEIGHT - offsetTop,\r\n          0,\r\n          0,\r\n          this.opts.fixedRatio,\r\n          this.opts.minRatio,\r\n          this.opts.maxRatio,\r\n          this.opts.animate,\r\n        );\r\n        this.arrange(\r\n          bigOnes,\r\n          bigWidth,\r\n          bigHeight,\r\n          bigOffsetLeft,\r\n          bigOffsetTop,\r\n          this.opts.bigFixedRatio,\r\n          this.opts.bigMinRatio,\r\n          this.opts.bigMaxRatio,\r\n          this.opts.animate,\r\n        );\r\n      }\r\n    } else if (bigOnes.length > 0 && smallOnes.length === 0) {\r\n      this\r\n        // We only have one bigOne just center it\r\n        .arrange(\r\n          bigOnes,\r\n          WIDTH,\r\n          HEIGHT,\r\n          0,\r\n          0,\r\n          this.opts.bigFixedRatio,\r\n          this.opts.bigMinRatio,\r\n          this.opts.bigMaxRatio,\r\n          this.opts.animate,\r\n        );\r\n    } else {\r\n      this.arrange(\r\n        smallOnes,\r\n        WIDTH - offsetLeft,\r\n        HEIGHT - offsetTop,\r\n        offsetLeft,\r\n        offsetTop,\r\n        this.opts.fixedRatio,\r\n        this.opts.minRatio,\r\n        this.opts.maxRatio,\r\n        this.opts.animate,\r\n      );\r\n    }\r\n  }\r\n\r\n  initLayoutContainer(container, opts) {\r\n    this.opts = {\r\n      maxRatio: opts.maxRatio != null ? opts.maxRatio : 3 / 2,\r\n      minRatio: opts.minRatio != null ? opts.minRatio : 9 / 16,\r\n      fixedRatio: opts.fixedRatio != null ? opts.fixedRatio : false,\r\n      animate: opts.animate != null ? opts.animate : false,\r\n      bigClass: opts.bigClass != null ? opts.bigClass : 'OT_big',\r\n      bigPercentage: opts.bigPercentage != null ? opts.bigPercentage : 0.8,\r\n      bigFixedRatio: opts.bigFixedRatio != null ? opts.bigFixedRatio : false,\r\n      bigMaxRatio: opts.bigMaxRatio != null ? opts.bigMaxRatio : 3 / 2,\r\n      bigMinRatio: opts.bigMinRatio != null ? opts.bigMinRatio : 9 / 16,\r\n      bigFirst: opts.bigFirst != null ? opts.bigFirst : true,\r\n    };\r\n    this.layoutContainer = typeof container === 'string' ? $(container) : container;\r\n  }\r\n\r\n  setLayoutOptions(options) {\r\n    this.opts = options;\r\n  }\r\n}\r\nexport default OpenViduLayout;\r\n","class UserModel {\r\n    connectionId;\r\n    audioActive;\r\n    videoActive;\r\n    screenShareActive;\r\n    nickname;\r\n    streamManager;\r\n    type; // 'remote' | 'local'\r\n\r\n    constructor() {\r\n        this.connectionId = '';\r\n        this.audioActive = true;\r\n        this.videoActive = true;\r\n        this.screenShareActive = false;\r\n        this.nickname = '';\r\n        this.streamManager = null;\r\n        this.type = 'local';\r\n    }\r\n\r\n    isAudioActive() {\r\n        return this.audioActive;\r\n    }\r\n\r\n    isVideoActive() {\r\n        return this.videoActive;\r\n    }\r\n\r\n    isScreenShareActive() {\r\n        return this.screenShareActive;\r\n    }\r\n\r\n    getConnectionId() {\r\n        return this.connectionId;\r\n    }\r\n\r\n    getNickname() {\r\n        return this.nickname;\r\n    }\r\n\r\n    getStreamManager() {\r\n        return this.streamManager;\r\n    }\r\n\r\n    isLocal() {\r\n        return this.type === 'local';\r\n    }\r\n    isRemote() {\r\n        return !this.isLocal();\r\n    }\r\n    setAudioActive(isAudioActive) {\r\n        this.audioActive = isAudioActive;\r\n    }\r\n    setVideoActive(isVideoActive) {\r\n        this.videoActive = isVideoActive;\r\n    }\r\n    setScreenShareActive(isScreenShareActive) {\r\n        this.screenShareActive = isScreenShareActive;\r\n    }\r\n    setStreamManager(streamManager) {\r\n        this.streamManager = streamManager;\r\n    }\r\n\r\n    setConnectionId(conecctionId) {\r\n        this.connectionId = conecctionId;\r\n    }\r\n    setNickname(nickname) {\r\n        this.nickname = nickname;\r\n    }\r\n    setType(type) {\r\n        if (type === 'local' |  type === 'remote') {\r\n            this.type = type;\r\n        }\r\n    }\r\n}\r\n\r\nexport default UserModel;\r\n","import React, { Component } from 'react';\r\nimport './ToolbarComponent.css';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport Mic from '@material-ui/icons/Mic';\r\nimport MicOff from '@material-ui/icons/MicOff';\r\nimport Videocam from '@material-ui/icons/Videocam';\r\nimport VideocamOff from '@material-ui/icons/VideocamOff';\r\nimport Fullscreen from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExit from '@material-ui/icons/FullscreenExit';\r\nimport PictureInPicture from '@material-ui/icons/PictureInPicture';\r\nimport ScreenShare from '@material-ui/icons/ScreenShare';\r\nimport StopScreenShare from '@material-ui/icons/StopScreenShare';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport PowerSettingsNew from '@material-ui/icons/PowerSettingsNew';\r\nimport QuestionAnswer from '@material-ui/icons/QuestionAnswer';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport default class ToolbarComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { fullscreen: false };\r\n        this.camStatusChanged = this.camStatusChanged.bind(this);\r\n        this.micStatusChanged = this.micStatusChanged.bind(this);\r\n        this.screenShare = this.screenShare.bind(this);\r\n        this.stopScreenShare = this.stopScreenShare.bind(this);\r\n        this.toggleFullscreen = this.toggleFullscreen.bind(this);\r\n        this.leaveSession = this.leaveSession.bind(this);\r\n        this.toggleChat = this.toggleChat.bind(this);\r\n    }\r\n\r\n\r\n    micStatusChanged() {\r\n        this.props.micStatusChanged();\r\n    }\r\n\r\n    camStatusChanged() {\r\n        this.props.camStatusChanged();\r\n    }\r\n\r\n    screenShare() {\r\n        this.props.screenShare();\r\n    }\r\n\r\n    stopScreenShare() {\r\n        this.props.stopScreenShare();\r\n    }\r\n\r\n    toggleFullscreen() {\r\n        this.setState({ fullscreen: !this.state.fullscreen });\r\n        this.props.toggleFullscreen();\r\n    }\r\n\r\n    leaveSession() {\r\n        this.props.leaveSession();\r\n    }\r\n\r\n    toggleChat() {\r\n        this.props.toggleChat();\r\n    }\r\n\r\n    render() {\r\n        const mySessionId = this.props.sessionId;\r\n        const localUser = this.props.user;\r\n        return (\r\n            <AppBar className=\"toolbar\" id=\"header\">\r\n                <Toolbar className=\"toolbar\">\r\n                    <div id=\"navSessionInfo\">\r\n                        <img\r\n                            id=\"header_img\"\r\n                            alt=\"OpenVidu Logo\"\r\n                            src=\"https://raw.githubusercontent.com/OpenVidu/openvidu-call/master/front/openvidu-call/src/assets/images/openvidu_logo.png\"\r\n                        />\r\n\r\n                        {this.props.sessionId && <div id=\"titleContent\">\r\n                            <span id=\"session-title\">{mySessionId}</span>\r\n                        </div>}\r\n                    </div>\r\n\r\n                    <div className=\"buttonsContent\">\r\n                        <IconButton color=\"inherit\" className=\"navButton\" id=\"navMicButton\" onClick={this.micStatusChanged}>\r\n                            {localUser !== undefined && localUser.isAudioActive() ? <Mic /> : <MicOff color=\"secondary\" />}\r\n                        </IconButton>\r\n\r\n                        <IconButton color=\"inherit\" className=\"navButton\" id=\"navCamButton\" onClick={this.camStatusChanged}>\r\n                            {localUser !== undefined && localUser.isVideoActive() ? (\r\n                                <Videocam />\r\n                            ) : (\r\n                                <VideocamOff color=\"secondary\" />\r\n                            )}\r\n                        </IconButton>\r\n\r\n                        <IconButton color=\"inherit\" className=\"navButton\" onClick={this.screenShare}>\r\n                            {localUser !== undefined && localUser.isScreenShareActive() ? <PictureInPicture /> : <ScreenShare />}\r\n                        </IconButton>\r\n\r\n                        {localUser !== undefined &&\r\n                            localUser.isScreenShareActive() && (\r\n                                <IconButton onClick={this.stopScreenShare} id=\"navScreenButton\">\r\n                                    <StopScreenShare color=\"secondary\" />\r\n                                </IconButton>\r\n                            )}\r\n\r\n                        <IconButton color=\"inherit\" className=\"navButton\" onClick={this.toggleFullscreen}>\r\n                            {localUser !== undefined && this.state.fullscreen ? <FullscreenExit /> : <Fullscreen />}\r\n                        </IconButton>\r\n                        <IconButton color=\"secondary\" className=\"navButton\" onClick={this.leaveSession} id=\"navLeaveButton\">\r\n                            <PowerSettingsNew />\r\n                        </IconButton>\r\n                         <IconButton color=\"inherit\" onClick={this.toggleChat} id=\"navChatButton\">\r\n                            {this.props.showNotification && <div id=\"point\" className=\"\" />}\r\n                            <Tooltip title=\"Chat\">\r\n                                <QuestionAnswer />\r\n                            </Tooltip>\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './VideoRoomComponent.css';\r\nimport { OpenVidu } from 'openvidu-browser';\r\nimport StreamComponent from './stream/StreamComponent';\r\nimport DialogExtensionComponent from './dialog-extension/DialogExtension';\r\nimport ChatComponent from './chat/ChatComponent';\r\n\r\nimport OpenViduLayout from '../layout/openvidu-layout';\r\nimport UserModel from '../models/user-model';\r\nimport ToolbarComponent from './toolbar/ToolbarComponent';\r\n\r\nvar localUser = new UserModel();\r\n\r\nclass VideoRoomComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.OPENVIDU_SERVER_URL = \"https://stream.vconf.in.th\";\r\n        this.OPENVIDU_SERVER_SECRET = 'Telemed1';\r\n        this.hasBeenUpdated = false;\r\n        this.layout = new OpenViduLayout();\r\n        let sessionName = this.props.sessionName ? this.props.sessionName : 'SessionA';\r\n        let userName = this.props.user ? this.props.user : 'OpenVidu_User' + Math.floor(Math.random() * 100);\r\n        this.state = {\r\n            mySessionId: sessionName,\r\n            myUserName: userName,\r\n            session: undefined,\r\n            localUser: undefined,\r\n            subscribers: [],\r\n            chatDisplay: 'none',\r\n        };\r\n\r\n        this.joinSession = this.joinSession.bind(this);\r\n        this.leaveSession = this.leaveSession.bind(this);\r\n        this.onbeforeunload = this.onbeforeunload.bind(this);\r\n        this.updateLayout = this.updateLayout.bind(this);\r\n        this.camStatusChanged = this.camStatusChanged.bind(this);\r\n        this.micStatusChanged = this.micStatusChanged.bind(this);\r\n        this.nicknameChanged = this.nicknameChanged.bind(this);\r\n        this.toggleFullscreen = this.toggleFullscreen.bind(this);\r\n        this.screenShare = this.screenShare.bind(this);\r\n        this.stopScreenShare = this.stopScreenShare.bind(this);\r\n        this.closeDialogExtension = this.closeDialogExtension.bind(this);\r\n        this.toggleChat = this.toggleChat.bind(this);\r\n        this.checkNotification = this.checkNotification.bind(this);\r\n        this.checkSize = this.checkSize.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const openViduLayoutOptions = {\r\n            maxRatio: 3 / 2, // The narrowest ratio that will be used (default 2x3)\r\n            minRatio: 9 / 16, // The widest ratio that will be used (default 16x9)\r\n            fixedRatio: false, // If this is true then the aspect ratio of the video is maintained and minRatio and maxRatio are ignored (default false)\r\n            bigClass: 'OV_big', // The class to add to elements that should be sized bigger\r\n            bigPercentage: 0.8, // The maximum percentage of space the big ones should take up\r\n            bigFixedRatio: false, // fixedRatio for the big ones\r\n            bigMaxRatio: 3 / 2, // The narrowest ratio to use for the big elements (default 2x3)\r\n            bigMinRatio: 9 / 16, // The widest ratio to use for the big elements (default 16x9)\r\n            bigFirst: true, // Whether to place the big one in the top left (true) or bottom right\r\n            animate: true, // Whether you want to animate the transitions\r\n        };\r\n\r\n        this.layout.initLayoutContainer(document.getElementById('layout'), openViduLayoutOptions);\r\n        window.addEventListener('beforeunload', this.onbeforeunload);\r\n        window.addEventListener('resize', this.updateLayout);\r\n        window.addEventListener('resize', this.checkSize);\r\n        this.joinSession();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('beforeunload', this.onbeforeunload);\r\n        window.removeEventListener('resize', this.updateLayout);\r\n        window.removeEventListener('resize', this.checkSize);\r\n        this.leaveSession();\r\n    }\r\n\r\n    onbeforeunload(event) {\r\n        this.leaveSession();\r\n    }\r\n\r\n    joinSession() {\r\n        this.OV = new OpenVidu();\r\n\r\n        this.setState(\r\n            {\r\n                session: this.OV.initSession(),\r\n            },\r\n            () => {\r\n                this.subscribeToStreamCreated();\r\n\r\n                this.connectToSession();\r\n            },\r\n        );\r\n    }\r\n\r\n    connectToSession() {\r\n        if (this.props.token !== undefined) {\r\n            console.log('token received: ', this.props.token);\r\n            this.connect(this.props.token);\r\n        } else {\r\n            this.getToken().then((token) => {\r\n                console.log(token);\r\n                this.connect(token);\r\n            }).catch((error) => {\r\n                if(this.props.error){\r\n                    this.props.error({ error: error.error, messgae: error.message, code: error.code, status: error.status });\r\n                }\r\n                console.log('There was an error getting the token:', error.code, error.message);\r\n                alert('There was an error getting the token:', error.message);\r\n              });\r\n        }\r\n    }\r\n\r\n    connect(token) {\r\n        this.state.session\r\n            .connect(\r\n                token,\r\n                { clientData: this.state.myUserName },\r\n            )\r\n            .then(() => {\r\n                this.connectWebCam();\r\n            })\r\n            .catch((error) => {\r\n                if(this.props.error){\r\n                    this.props.error({ error: error.error, messgae: error.message, code: error.code, status: error.status });\r\n                }\r\n                alert('There was an error connecting to the session:', error.message);\r\n                console.log('There was an error connecting to the session:', error.code, error.message);\r\n            });\r\n    }\r\n\r\n    connectWebCam() {\r\n        let publisher = this.OV.initPublisher(undefined, {\r\n            audioSource: undefined,\r\n            videoSource: undefined,\r\n            publishAudio: localUser.isAudioActive(),\r\n            publishVideo: localUser.isVideoActive(),\r\n            resolution: '640x480',\r\n            frameRate: 30,\r\n            insertMode: 'APPEND',\r\n        });\r\n\r\n        if (this.state.session.capabilities.publish) {\r\n            this.state.session.publish(publisher).then(() => {\r\n                if (this.props.joinSession) {\r\n                    this.props.joinSession();\r\n                }\r\n            });\r\n        }\r\n        localUser.setNickname(this.state.myUserName);\r\n        localUser.setConnectionId(this.state.session.connection.connectionId);\r\n        localUser.setScreenShareActive(false);\r\n        localUser.setStreamManager(publisher);\r\n        this.subscribeToUserChanged();\r\n        this.subscribeToStreamDestroyed();\r\n        this.sendSignalUserChanged({ isScreenShareActive: localUser.isScreenShareActive() });\r\n\r\n        this.setState({ localUser: localUser }, () => {\r\n            this.state.localUser.getStreamManager().on('streamPlaying', (e) => {\r\n                this.updateLayout();\r\n                publisher.videos[0].video.parentElement.classList.remove('custom-class');\r\n            });\r\n        });\r\n    }\r\n\r\n    leaveSession() {\r\n        const mySession = this.state.session;\r\n\r\n        if (mySession) {\r\n            mySession.disconnect();\r\n        }\r\n\r\n        // Empty all properties...\r\n        this.OV = null;\r\n        this.setState({\r\n            session: undefined,\r\n            subscribers: [],\r\n            mySessionId: 'SessionA',\r\n            myUserName: 'OpenVidu_User' + Math.floor(Math.random() * 100),\r\n            localUser: undefined,\r\n        });\r\n        if (this.props.leaveSession) {\r\n            this.props.leaveSession();\r\n        }\r\n    }\r\n    camStatusChanged() {\r\n        localUser.setVideoActive(!localUser.isVideoActive());\r\n        localUser.getStreamManager().publishVideo(localUser.isVideoActive());\r\n        this.sendSignalUserChanged({ isVideoActive: localUser.isVideoActive() });\r\n        this.setState({ localUser: localUser });\r\n    }\r\n\r\n    micStatusChanged() {\r\n        localUser.setAudioActive(!localUser.isAudioActive());\r\n        localUser.getStreamManager().publishAudio(localUser.isAudioActive());\r\n        this.sendSignalUserChanged({ isAudioActive: localUser.isAudioActive() });\r\n        this.setState({ localUser: localUser });\r\n    }\r\n\r\n    nicknameChanged(nickname) {\r\n        let localUser = this.state.localUser;\r\n        localUser.setNickname(nickname);\r\n        this.setState({ localUser: localUser });\r\n        this.sendSignalUserChanged({ nickname: this.state.localUser.getNickname() });\r\n    }\r\n\r\n    deleteSubscriber(stream) {\r\n        const remoteUsers = this.state.subscribers;\r\n        const userStream = remoteUsers.filter((user) => user.getStreamManager().stream === stream)[0];\r\n        let index = remoteUsers.indexOf(userStream, 0);\r\n        if (index > -1) {\r\n            remoteUsers.splice(index, 1);\r\n            this.setState({\r\n                subscribers: remoteUsers,\r\n            });\r\n        }\r\n    }\r\n\r\n    subscribeToStreamCreated() {\r\n        this.state.session.on('streamCreated', (event) => {\r\n            const subscriber = this.state.session.subscribe(event.stream, undefined);\r\n            var subscribers = this.state.subscribers;\r\n            subscriber.on('streamPlaying', (e) => {\r\n                this.checkSomeoneShareScreen();\r\n                subscriber.videos[0].video.parentElement.classList.remove('custom-class');\r\n            });\r\n            const newUser = new UserModel();\r\n            newUser.setStreamManager(subscriber);\r\n            newUser.setConnectionId(event.stream.connection.connectionId);\r\n            newUser.setType('remote');\r\n            const nickname = event.stream.connection.data.split('%')[0];\r\n            newUser.setNickname(JSON.parse(nickname).clientData);\r\n            subscribers.push(newUser);\r\n            this.setState(\r\n                {\r\n                    subscribers: subscribers,\r\n                },\r\n                () => {\r\n                    if (this.state.localUser) {\r\n                        this.sendSignalUserChanged({\r\n                            isAudioActive: this.state.localUser.isAudioActive(),\r\n                            isVideoActive: this.state.localUser.isVideoActive(),\r\n                            nickname: this.state.localUser.getNickname(),\r\n                            isScreenShareActive: this.state.localUser.isScreenShareActive(),\r\n                        });\r\n                    }\r\n                    this.updateLayout();\r\n                },\r\n            );\r\n        });\r\n    }\r\n\r\n    subscribeToStreamDestroyed() {\r\n        // On every Stream destroyed...\r\n        this.state.session.on('streamDestroyed', (event) => {\r\n            // Remove the stream from 'subscribers' array\r\n            this.deleteSubscriber(event.stream);\r\n            setTimeout(() => {\r\n                this.checkSomeoneShareScreen();\r\n            }, 20);\r\n            event.preventDefault();\r\n            this.updateLayout();\r\n        });\r\n    }\r\n\r\n    subscribeToUserChanged() {\r\n        this.state.session.on('signal:userChanged', (event) => {\r\n            let remoteUsers = this.state.subscribers;\r\n            remoteUsers.forEach((user) => {\r\n                if (user.getConnectionId() === event.from.connectionId) {\r\n                    const data = JSON.parse(event.data);\r\n                    console.log('EVENTO REMOTE: ', event.data);\r\n                    if (data.isAudioActive !== undefined) {\r\n                        user.setAudioActive(data.isAudioActive);\r\n                    }\r\n                    if (data.isVideoActive !== undefined) {\r\n                        user.setVideoActive(data.isVideoActive);\r\n                    }\r\n                    if (data.nickname !== undefined) {\r\n                        user.setNickname(data.nickname);\r\n                    }\r\n                    if (data.isScreenShareActive !== undefined) {\r\n                        user.setScreenShareActive(data.isScreenShareActive);\r\n                    }\r\n                }\r\n            });\r\n            this.setState(\r\n                {\r\n                    subscribers: remoteUsers,\r\n                },\r\n                () => this.checkSomeoneShareScreen(),\r\n            );\r\n        });\r\n    }\r\n\r\n    updateLayout() {\r\n        setTimeout(() => {\r\n            this.layout.updateLayout();\r\n        }, 20);\r\n    }\r\n\r\n    sendSignalUserChanged(data) {\r\n        const signalOptions = {\r\n            data: JSON.stringify(data),\r\n            type: 'userChanged',\r\n        };\r\n        this.state.session.signal(signalOptions);\r\n    }\r\n\r\n    toggleFullscreen() {\r\n        const document = window.document;\r\n        const fs = document.getElementById('container');\r\n        if (\r\n            !document.fullscreenElement &&\r\n            !document.mozFullScreenElement &&\r\n            !document.webkitFullscreenElement &&\r\n            !document.msFullscreenElement\r\n        ) {\r\n            if (fs.requestFullscreen) {\r\n                fs.requestFullscreen();\r\n            } else if (fs.msRequestFullscreen) {\r\n                fs.msRequestFullscreen();\r\n            } else if (fs.mozRequestFullScreen) {\r\n                fs.mozRequestFullScreen();\r\n            } else if (fs.webkitRequestFullscreen) {\r\n                fs.webkitRequestFullscreen();\r\n            }\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            } else if (document.msExitFullscreen) {\r\n                document.msExitFullscreen();\r\n            } else if (document.mozCancelFullScreen) {\r\n                document.mozCancelFullScreen();\r\n            } else if (document.webkitExitFullscreen) {\r\n                document.webkitExitFullscreen();\r\n            }\r\n        }\r\n    }\r\n\r\n    screenShare() {\r\n        const videoSource = navigator.userAgent.indexOf('Firefox') !== -1 ? 'window' : 'screen';\r\n        const publisher = this.OV.initPublisher(\r\n            undefined,\r\n            {\r\n                videoSource: videoSource,\r\n                publishAudio: localUser.isAudioActive(),\r\n                publishVideo: localUser.isVideoActive(),\r\n                mirror: false,\r\n            },\r\n            (error) => {\r\n                if (error && error.name === 'SCREEN_EXTENSION_NOT_INSTALLED') {\r\n                    this.setState({ showExtensionDialog: true });\r\n                } else if (error && error.name === 'SCREEN_SHARING_NOT_SUPPORTED') {\r\n                    alert('Your browser does not support screen sharing');\r\n                } else if (error && error.name === 'SCREEN_EXTENSION_DISABLED') {\r\n                    alert('You need to enable screen sharing extension');\r\n                } else if (error && error.name === 'SCREEN_CAPTURE_DENIED') {\r\n                    alert('You need to choose a window or application to share');\r\n                }\r\n            },\r\n        );\r\n\r\n        publisher.once('accessAllowed', () => {\r\n            this.state.session.unpublish(localUser.getStreamManager());\r\n            localUser.setStreamManager(publisher);\r\n            this.state.session.publish(localUser.getStreamManager()).then(() => {\r\n                localUser.setScreenShareActive(true);\r\n                this.setState({ localUser: localUser }, () => {\r\n                    this.sendSignalUserChanged({ isScreenShareActive: localUser.isScreenShareActive() });\r\n                });\r\n            });\r\n        });\r\n        publisher.on('streamPlaying', () => {\r\n            this.updateLayout();\r\n            publisher.videos[0].video.parentElement.classList.remove('custom-class');\r\n        });\r\n    }\r\n\r\n    closeDialogExtension() {\r\n        this.setState({ showExtensionDialog: false });\r\n    }\r\n\r\n    stopScreenShare() {\r\n        this.state.session.unpublish(localUser.getStreamManager());\r\n        this.connectWebCam();\r\n    }\r\n\r\n    checkSomeoneShareScreen() {\r\n        let isScreenShared;\r\n        // return true if at least one passes the test\r\n        isScreenShared = this.state.subscribers.some((user) => user.isScreenShareActive()) || localUser.isScreenShareActive();\r\n        const openviduLayoutOptions = {\r\n            maxRatio: 3 / 2,\r\n            minRatio: 9 / 16,\r\n            fixedRatio: isScreenShared,\r\n            bigClass: 'OV_big',\r\n            bigPercentage: 0.8,\r\n            bigFixedRatio: false,\r\n            bigMaxRatio: 3 / 2,\r\n            bigMinRatio: 9 / 16,\r\n            bigFirst: true,\r\n            animate: true,\r\n        };\r\n        this.layout.setLayoutOptions(openviduLayoutOptions);\r\n        this.updateLayout();\r\n    }\r\n\r\n    toggleChat(property) {\r\n        let display = property;\r\n\r\n        if (display === undefined) {\r\n            display = this.state.chatDisplay === 'none' ? 'block' : 'none';\r\n        }\r\n        if (display === 'block') {\r\n            this.setState({ chatDisplay: display, messageReceived: false });\r\n        } else {\r\n            console.log('chat', display);\r\n            this.setState({ chatDisplay: display });\r\n        }\r\n        this.updateLayout();\r\n    }\r\n\r\n    checkNotification(event) {\r\n        this.setState({\r\n            messageReceived: this.state.chatDisplay === 'none',\r\n        });\r\n    }\r\n    checkSize() {\r\n        if (document.getElementById('layout').offsetWidth <= 700 && !this.hasBeenUpdated) {\r\n            this.toggleChat('none');\r\n            this.hasBeenUpdated = true;\r\n        }\r\n        if (document.getElementById('layout').offsetWidth > 700 && this.hasBeenUpdated) {\r\n            this.hasBeenUpdated = false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const mySessionId = this.state.mySessionId;\r\n        const localUser = this.state.localUser;\r\n        var chatDisplay = { display: this.state.chatDisplay };\r\n\r\n        return (\r\n            <div className=\"container\" id=\"container\">\r\n                <ToolbarComponent\r\n                    sessionId={mySessionId}\r\n                    user={localUser}\r\n                    showNotification={this.state.messageReceived}\r\n                    camStatusChanged={this.camStatusChanged}\r\n                    micStatusChanged={this.micStatusChanged}\r\n                    screenShare={this.screenShare}\r\n                    stopScreenShare={this.stopScreenShare}\r\n                    toggleFullscreen={this.toggleFullscreen}\r\n                    leaveSession={this.leaveSession}\r\n                    toggleChat={this.toggleChat}\r\n                />\r\n\r\n                <DialogExtensionComponent showDialog={this.state.showExtensionDialog} cancelClicked={this.closeDialogExtension} />\r\n\r\n                <div id=\"layout\" className=\"bounds\">\r\n                    {localUser !== undefined && localUser.getStreamManager() !== undefined && (\r\n                        <div className=\"OT_root OT_publisher custom-class\" id=\"localUser\">\r\n                            <StreamComponent user={localUser} handleNickname={this.nicknameChanged} />\r\n                        </div>\r\n                    )}\r\n                    {this.state.subscribers.map((sub, i) => (\r\n                        <div key={i} className=\"OT_root OT_publisher custom-class\" id=\"remoteUsers\">\r\n                            <StreamComponent user={sub} streamId={sub.streamManager.stream.streamId} />\r\n                        </div>\r\n                    ))}\r\n                    {localUser !== undefined && localUser.getStreamManager() !== undefined && (\r\n                        <div className=\"OT_root OT_publisher custom-class\" style={chatDisplay}>\r\n                            <ChatComponent\r\n                                user={localUser}\r\n                                chatDisplay={this.state.chatDisplay}\r\n                                close={this.toggleChat}\r\n                                messageReceived={this.checkNotification}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * --------------------------\r\n     * SERVER-SIDE RESPONSIBILITY\r\n     * --------------------------\r\n     * These methods retrieve the mandatory user token from OpenVidu Server.\r\n     * This behaviour MUST BE IN YOUR SERVER-SIDE IN PRODUCTION (by using\r\n     * the API REST, openvidu-java-client or openvidu-node-client):\r\n     *   1) Initialize a session in OpenVidu Server\t(POST /api/sessions)\r\n     *   2) Generate a token in OpenVidu Server\t\t(POST /api/tokens)\r\n     *   3) The token must be consumed in Session.connect() method\r\n     */\r\n\r\n    getToken() {\r\n        return this.createSession(this.state.mySessionId).then((sessionId) => this.createToken(sessionId));\r\n    }\r\n\r\n    createSession(sessionId) {\r\n        return new Promise((resolve, reject) => {\r\n            var data = JSON.stringify({ customSessionId: sessionId });\r\n            axios\r\n                .post(this.OPENVIDU_SERVER_URL + '/api/sessions', data, {\r\n                    headers: {\r\n                        Authorization: 'Basic ' + btoa('OPENVIDUAPP:' + this.OPENVIDU_SERVER_SECRET),\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    console.log('CREATE SESION', response);\r\n                    resolve(response.data.id);\r\n                })\r\n                .catch((response) => {\r\n                    var error = Object.assign({}, response);\r\n                    if (error.response && error.response.status === 409) {\r\n                        resolve(sessionId);\r\n                    } else {\r\n                        console.log(error);\r\n                        console.warn(\r\n                            'No connection to OpenVidu Server. This may be a certificate error at ' + this.OPENVIDU_SERVER_URL,\r\n                        );\r\n                        if (\r\n                            window.confirm(\r\n                                'No connection to OpenVidu Server. This may be a certificate error at \"' +\r\n                                    this.OPENVIDU_SERVER_URL +\r\n                                    '\"\\n\\nClick OK to navigate and accept it. ' +\r\n                                    'If no certificate warning is shown, then check that your OpenVidu Server is up and running at \"' +\r\n                                    this.OPENVIDU_SERVER_URL +\r\n                                    '\"',\r\n                            )\r\n                        ) {\r\n                            window.location.assign(this.OPENVIDU_SERVER_URL + '/accept-certificate');\r\n                        }\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    createToken(sessionId) {\r\n        return new Promise((resolve, reject) => {\r\n            var data = JSON.stringify({ session: sessionId });\r\n            axios\r\n                .post(this.OPENVIDU_SERVER_URL + '/api/tokens', data, {\r\n                    headers: {\r\n                        Authorization: 'Basic ' + btoa('OPENVIDUAPP:' + this.OPENVIDU_SERVER_SECRET),\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    console.log('TOKEN', response);\r\n                    resolve(response.data.token);\r\n                })\r\n                .catch((error) => reject(error));\r\n        });\r\n    }\r\n}\r\nexport default VideoRoomComponent;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport VideoRoomComponent from './components/VideoRoomComponent';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<VideoRoomComponent />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}